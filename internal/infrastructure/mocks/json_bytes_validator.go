// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import (
	infrastructure "makly/hangman/internal/infrastructure"

	mock "github.com/stretchr/testify/mock"
)

// JSONBytesValidator is an autogenerated mock type for the JSONBytesValidator type
type JSONBytesValidator struct {
	mock.Mock
}

type JSONBytesValidator_Expecter struct {
	mock *mock.Mock
}

func (_m *JSONBytesValidator) EXPECT() *JSONBytesValidator_Expecter {
	return &JSONBytesValidator_Expecter{mock: &_m.Mock}
}

// ValidateJSONBytes provides a mock function with given fields: jsonBytes, schemaReader
func (_m *JSONBytesValidator) ValidateJSONBytes(jsonBytes []byte, schemaReader infrastructure.Reader) error {
	ret := _m.Called(jsonBytes, schemaReader)

	if len(ret) == 0 {
		panic("no return value specified for ValidateJSONBytes")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, infrastructure.Reader) error); ok {
		r0 = rf(jsonBytes, schemaReader)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// JSONBytesValidator_ValidateJSONBytes_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateJSONBytes'
type JSONBytesValidator_ValidateJSONBytes_Call struct {
	*mock.Call
}

// ValidateJSONBytes is a helper method to define mock.On call
//   - jsonBytes []byte
//   - schemaReader infrastructure.Reader
func (_e *JSONBytesValidator_Expecter) ValidateJSONBytes(jsonBytes interface{}, schemaReader interface{}) *JSONBytesValidator_ValidateJSONBytes_Call {
	return &JSONBytesValidator_ValidateJSONBytes_Call{Call: _e.mock.On("ValidateJSONBytes", jsonBytes, schemaReader)}
}

func (_c *JSONBytesValidator_ValidateJSONBytes_Call) Run(run func(jsonBytes []byte, schemaReader infrastructure.Reader)) *JSONBytesValidator_ValidateJSONBytes_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].([]byte), args[1].(infrastructure.Reader))
	})
	return _c
}

func (_c *JSONBytesValidator_ValidateJSONBytes_Call) Return(err error) *JSONBytesValidator_ValidateJSONBytes_Call {
	_c.Call.Return(err)
	return _c
}

func (_c *JSONBytesValidator_ValidateJSONBytes_Call) RunAndReturn(run func([]byte, infrastructure.Reader) error) *JSONBytesValidator_ValidateJSONBytes_Call {
	_c.Call.Return(run)
	return _c
}

// NewJSONBytesValidator creates a new instance of JSONBytesValidator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewJSONBytesValidator(t interface {
	mock.TestingT
	Cleanup(func())
}) *JSONBytesValidator {
	mock := &JSONBytesValidator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
